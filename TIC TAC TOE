import tkinter as tk
from tkinter import messagebox
from tkinter import ttk

def start_game():
    global players, turn, board, buttons
    players = [player1_choice.get(), player2_choice.get()]
    turn = 0
    board = [[' ' for _ in range(3)] for _ in range(3)]
    create_board()
    notebook.select(tab3)

def restart_game():
    global turn, board
    turn = 0
    board = [[' ' for _ in range(3)] for _ in range(3)]
    create_board()

def check_winner():
    for row in range(3):
        if board[row][0] == board[row][1] == board[row][2] and board[row][0] != ' ':
            highlight_winner([(row, 0), (row, 1), (row, 2)])
            return board[row][0]
    
    for col in range(3):
        if board[0][col] == board[1][col] == board[2][col] and board[0][col] != ' ':
            highlight_winner([(0, col), (1, col), (2, col)])
            return board[0][col]
    
    if board[0][0] == board[1][1] == board[2][2] and board[0][0] != ' ':
        highlight_winner([(0, 0), (1, 1), (2, 2)])
        return board[0][0]
    
    if board[0][2] == board[1][1] == board[2][0] and board[0][2] != ' ':
        highlight_winner([(0, 2), (1, 1), (2, 0)])
        return board[0][2]
    
    return None

def highlight_winner(cells):
    for r, c in cells:
        buttons[r][c].config(bg='lightgreen')
    root.after(1000, lambda: messagebox.showinfo("Congratulations!", f"\U0001F389 Player {board[cells[0][0]][cells[0][1]]} Wins! \U0001F389"))

def is_draw():
    if all(cell != ' ' for row in board for cell in row):
        root.after(1000, lambda: messagebox.showinfo("Game Over", "It's a draw!"))
        return True
    return False

def on_click(row, col):
    global turn
    if board[row][col] == ' ':
        board[row][col] = players[turn % 2]
        buttons[row][col].config(text=players[turn % 2], state=tk.DISABLED, font=('Arial', 28, 'bold'), fg='blue' if players[turn % 2] == players[0] else 'red')
        winner = check_winner()
        if winner or is_draw():
            show_restart_button()
        else:
            turn += 1

def show_restart_button():
    restart_btn = tk.Button(tab3, text="Restart Game", font=('Arial', 14), command=restart_game, bg='red', fg='white')
    restart_btn.place(relx=0.5, rely=0.8, anchor=tk.CENTER)

def create_board():
    global buttons
    for widget in tab3.winfo_children():
        widget.destroy()
    buttons = [[None for _ in range(3)] for _ in range(3)]
    frame = tk.Frame(tab3, bg='lightblue')
    frame.place(relx=0.5, rely=0.4, anchor=tk.CENTER)
    for i in range(3):
        for j in range(3):
            buttons[i][j] = tk.Button(frame, text=board[i][j], font=('Arial', 24), height=2, width=5, bg='white', command=lambda r=i, c=j: on_click(r, c))
            buttons[i][j].grid(row=i, column=j, padx=5, pady=5)

def create_dashboard():
    global player1_choice, player2_choice
    for widget in tab2.winfo_children():
        widget.destroy()
    frame = tk.Frame(tab2, bg='lightcoral')
    frame.place(relx=0.5, rely=0.4, anchor=tk.CENTER)
    tk.Label(frame, text="Choose Your Symbols", font=('Arial', 16), bg='lightcoral').pack(pady=10)
    symbols = ['○', '△', '□', 'X', 'O', '@', '$', '▲', '★']
    
    player1_choice = tk.StringVar(value='○')
    player2_choice = tk.StringVar(value='△')
    
    tk.Label(frame, text="Player 1", font=('Arial', 14), bg='lightcoral').pack()
    tk.OptionMenu(frame, player1_choice, *symbols).pack()
    
    tk.Label(frame, text="Player 2", font=('Arial', 14), bg='lightcoral').pack()
    tk.OptionMenu(frame, player2_choice, *symbols).pack()
    
    tk.Button(frame, text="Start Game", font=('Arial', 14), command=start_game).pack(pady=10)

def create_tabs():
    global tab1, tab2, tab3, notebook
    notebook = ttk.Notebook(root)
    notebook.pack(expand=True, fill='both')
    
    tab1 = tk.Frame(notebook, bg='lightblue')
    tab2 = tk.Frame(notebook, bg='lightcoral')
    tab3 = tk.Frame(notebook, bg='lightgoldenrodyellow')
    
    notebook.add(tab1, text='Start')
    notebook.add(tab2, text='Choose Symbols')
    notebook.add(tab3, text='Game')
    
    frame = tk.Frame(tab1, bg='lightblue')
    frame.place(relx=0.5, rely=0.4, anchor=tk.CENTER)
    tk.Label(frame, text="Welcome to Tic-Tac-Toe!", font=('Arial', 18), bg='lightblue').pack()
    tk.Button(frame, text="Next", font=('Arial', 14), command=lambda: notebook.select(tab2)).pack(pady=10)
    
    create_dashboard()
    
root = tk.Tk()
root.title("Tic-Tac-Toe")
root.geometry("400x500")
root.configure(bg='lightgoldenrodyellow')
create_tabs()
root.mainloop()
